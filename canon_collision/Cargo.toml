[package]
name = "canon_collision"
version = "0.0.1"
authors = ["Rukai <rubickent@gmail.com>"]
description = ""
license = "GPL-3.0"
repository = "https://github.com/rukai/canon_collision"
keywords = ["platform", "fighter", "game"]
categories = ["games", "game-engines"]
default-run = "canon_collision"
edition = "2018"

[dependencies]
canon_collision_lib = { path = "../canon_collision_lib" }
byteorder = "1"
chrono = { version = "0.4", features = ["serde"] }
strum = "0.19"
strum_macros = "0.19"
num-traits = "0.2"
num-derive = "0.3"
getopts = "0.2"
log = "0.4"
lyon = "0.16"
rand = "0.7"
rand_chacha = "0.2"
serde = "1"
serde_derive = "1"
serde_json = "1"
slotmap = { version = "0.4", features = ["serde"] }
treeflection = "0.1"
treeflection_derive = "0.4"
winit = "0.22" # Needed on all builds, game logic is dependent on VirtualKeyCode struct
winit_input_helper = "0.7"
gltf = "0.15"
png-decoder = { git = "https://github.com/mpizenberg/png-decoder" }
cgmath = { version = "0.17" }
futures = "0.3"

# TODO: zerocopy and bytemuck do the same thing but:
# *  zerocopy is a private google project and it fails on large array sizes
# *  bytemuck requires unsafe
#
# The plan is to write a safe #[derive(Pod)] for bytemuck then convert everything to bytemuck.
# Or maybe just wait for someone else to write one :)
zerocopy = "0.3"
bytemuck = "1"

vk-shader-macros = { version = "0.2", optional = true }
#wgpu_glyph = { version = "0.9", optional = true }
wgpu_glyph = { git = "https://github.com/rukai/wgpu_glyph", rev = "742e1e1f33f811a726d31090206255e3b78d1c4b", optional = true }
#wgpu = { version = "0.5", optional = true }
wgpu = { version = "0.5.0", git = "https://github.com/gfx-rs/wgpu-rs", rev = "ffa9199402e1436ba525007754e161b08ab12bcc", optional = true }
raw-window-handle = "0.3"

[features]
default = ["wgpu_renderer"]
wgpu_renderer = ["wgpu", "wgpu_glyph", "vk-shader-macros"]
