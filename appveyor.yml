environment:
  global:
    RUST_VERSION: stable
  matrix:
    - TARGET: x86_64-pc-windows-msvc

image: Visual Studio 2017

install:
  # setup ssh keys
  # commented out as website is not running for now
  #- nuget install secure-file -ExcludeVersion
  #- secure-file\tools\secure-file -decrypt ssh-keys-appveyor.zip.enc -secret %ssh-keys-secret%
  #- 7z x ssh-keys-appveyor.zip
  #- rm -r C:/Users/appveyor/.ssh
  #- mv .ssh C:/Users/appveyor/
  #
  # Setup gtk deps https://gtk-rs.org/docs-src/requirements.html
  - git clone https://github.com/Microsoft/vcpkg
  - cd vcpkg
  - bootstrap-vcpkg.bat
  - vcpkg install gtk:x64-windows
  - set VCPKGDIR=%CD%\installed\x64-windows
  - set PATH=%VCPKGDIR%\bin;%PATH%
  - set GTK_LIB_DIR=%VCPKGDIR%\lib
  - mklink %VCPKGDIR%\lib\gtk-3.lib %VCPKGDIR%\lib\gtk-3.0.lib
  - mklink %VCPKGDIR%\lib\gdk-3.lib %VCPKGDIR%\lib\gdk-3.0.lib
  - mklink %VCPKGDIR%\bin\gtk-3.0.dll %VCPKGDIR%\bin\gtk-3.dll
  - mklink %VCPKGDIR%\bin\gdk-3.0.dll %VCPKGDIR%\bin\gdk-3.dll
  - mkdir %VCPKGDIR%\etc
  - mkdir %VCPKGDIR%\etc\gtk-3.0
  - echo "[Settings]" >> %VCPKGDIR%\etc\gtk-3.0\settings.ini
  - echo "gtk-theme-name=win32" >> %VCPKGDIR%\etc\gtk-3.0\settings.ini
  - cd ..
    # TODO: instructions say to add settings.ini file, but it doesnt look very important.
  # Setup shaderc deps
  - set PATH=C:\Python37;%PATH%
  - choco install ninja
  # Setup rust
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -V
  - cargo -V
  - echo %PATH%

test_script:
  - cargo test --release --all
  - cargo build --release --all
  # commented out as website is not running for now
  #- mkdir pf
  #- move target\x86_64-pc-windows-gnu\release\pf_sandbox.exe pf
  #- move target\x86_64-pc-windows-gnu\release\pf_tas.exe pf
  #- move target\x86_64-pc-windows-gnu\release\pf_cli.exe pf
  #- move target\x86_64-pc-windows-gnu\release\pf_map_controllers.exe pf
  #- move target\x86_64-pc-windows-gnu\release\panic_handler.exe pf
  #- copy C:\msys64\mingw64\bin\libcairo-2.dll pf
  #- copy C:\msys64\mingw64\bin\libcairo-gobject-2.dll pf
  #- copy C:\msys64\mingw64\bin\libepoxy-0.dll pf
  #- copy C:\msys64\mingw64\bin\libfribidi-0.dll pf
  #- copy C:\msys64\mingw64\bin\libgdk-3-0.dll pf
  #- copy C:\msys64\mingw64\bin\libgdk_pixbuf-2.0-0.dll pf
  #- copy C:\msys64\mingw64\bin\libgio-2.0-0.dll pf
  #- copy C:\msys64\mingw64\bin\libglib-2.0-0.dll pf
  #- copy C:\msys64\mingw64\bin\libgmodule-2.0-0.dll pf
  #- copy C:\msys64\mingw64\bin\libgobject-2.0-0.dll pf
  #- copy C:\msys64\mingw64\bin\libgtk-3-0.dll pf
  #- copy C:\msys64\mingw64\bin\libintl-8.dll pf
  #- copy C:\msys64\mingw64\bin\libpango-1.0-0.dll pf
  #- copy C:\msys64\mingw64\bin\libusb-1.0.dll pf
  #- 7z a pfsandbox-%APPVEYOR_REPO_COMMIT:~0,15%-windows.zip pf
  #- echo put pfsandbox-%APPVEYOR_REPO_COMMIT:~0,15%-windows.zip /home/rubic/PF_Sandbox_Website/builds/ | sftp rubic@pfsandbox.net

skip_tags: true
cache:
  - C:\Users\appveyor\.cargo\registry
# Building is done in the test phase, so we disable Appveyor's build phase.
build: false
